---

- hosts: staging
  become: yes
  tasks:


  # - name: Install the nodejs LTS repos
  #   apt_repository:
  #     repo: "deb https://deb.nodesource.com/setup_15.x"
  #     state: present
  #     update_cache: yes

  # - name: update nodejs package 
  #   ansible.builtin.shell: curl -fsSL https://deb.nodesource.com/setup_15.x | sudo -E bash -
  #   args:
  #     executable: /bin/bash

  # - name: Install a .deb package from the internet
  #   apt:
  #     deb: https://deb.nodesource.com/setup_15.x
  - name: Update apt-get repo and cache
      apt: update_cache=yes force_apt_get=yes cache_valid_time=3600

  - name: install nodejs
    apt:
      name: nodejs
      state: present
  
  - name: Creates directory
    file:
      path: /src/www
      state: directory

  - name: getting artifact
    ansible.builtin.unarchive:
      src: http://10.0.0.4:8080/job/weightCI/lastSuccessfulBuild/artifact/latest.zip
      dest: /src/www
      remote_src: yes         

  # - name: creat .env
  #   command: bash buildEnv.sh -u {{ hostvars['staging'].okta_url }} -i {{ hostvars['staging'].okta_id }} -s {{ hostvars['staging'].okta_secret }} -h {{ hostvars['staging'].db_host }} -p {{ hostvars['staging'].db_pass }} -n {{ hostvars['staging'].db_user }}
  - name: Run a script with arguments (free form)
    ansible.builtin.script: bash buildEnv.sh -u {{ hostvars['staging'].okta_url }} -i {{ hostvars['staging'].okta_id }} -s {{ hostvars['staging'].okta_secret }} -h {{ hostvars['staging'].db_host }} -p {{ hostvars['staging'].db_pass }} -n {{ hostvars['staging'].db_user }}

  - name: initialize db
    command: node /src/www/tools/initdb.js

  - name: run app
    command: node /src/www/src/index.js
