---
- hosts: "{{host}}"
  become: yes
  tasks:
  
  - name: install dependencies
    apt:
      name: "{{item}}"
      state: present
      update_cache: yes
    loop:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

  - name: gpg key
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: get repo
    apt_repository:
      repo: deb https://download.docker.com/linux/ubuntu bionic stable
      state: present

  - name: install docker
    apt:
      name: "{{item}}"
      state: latest
      update_cache: yes
    loop:
      - docker-ce
      - docker-ce-cli
      - containerd.io

  - name: run docker as service
    service:
      name: docker
      state: started
      enabled: yes

  - name: Find my public ip
    uri: 
      url: http://ifconfig.me/ip
      return_content: yes
    register: ip_response

  - name: Find build number
    uri: 
      url: http://10.0.0.5:8080/job/weightCI/lastSuccessfulBuild/buildNumber
      return_content: yes
      force_basic_auth: yes
      username: "{{ username }}"
      password: "{{ api_key }}"
    register: build_response

  - name: Creates directory
    file:
      path: /src/www
      state: directory

  - name: Creating a .env file
    copy:
      dest: "/src/www/.env"
      content: |
        PORT=8080
        HOST=0.0.0.0
        NODE_ENV=development
        HOST_URL=http://{{ ip_response.content }}:8080
        COOKIE_ENCRYPT_PWD=superAwesomePasswordStringThatIsAtLeast32CharactersLong!
        OKTA_ORG_URL=https://{{ url }}
        OKTA_CLIENT_ID={{ id }}
        OKTA_CLIENT_SECRET={{ secret }}
        PGHOST={{ db_host }}
        PGUSERNAME={{ user }}
        PGDATABASE=postgres
        PGPASSWORD={{ pass }}
        PGPORT=5432

  - name: Kill docker containers
    ansible.builtin.shell: docker kill $(docker ps -q)

  - name: Run new app image
    ansible.builtin.shell: docker run smallpox230/weight:{{ build_response.content }} -p 8080:8080 --env-file /src/www/.env
  # - name: update nodejs package 
  #   ansible.builtin.shell: curl -fsSL https://deb.nodesource.com/setup_15.x | sudo -E bash -

  # - name: install nodejs
  #   apt:
  #     name: nodejs
  #     state: present

  # - name: Install pm2 globally.
  #   community.general.npm:
  #     name: pm2
  #     global: yes

  # - name: install zip
  #   apt:
  #     name: zip
  #     state: present

  # - name: Creates directory
  #   file:
  #     path: /src/www
  #     state: directory

  # - name: Download artifact
  #   get_url:
  #     url: http://10.0.0.5:8080/job/weightCI/lastSuccessfulBuild/artifact/latest.zip
  #     dest: /src/www
      # force_basic_auth: yes
      # username: "{{ username }}"
      # password: "{{ api_key }}"

  # - name: Extract artifact
  #   ansible.builtin.unarchive:
  #     src: /src/www/latest.zip
  #     dest: /src/www
  #     remote_src: yes
  

  # - name: Creating a .env file
  #   copy:
  #     dest: "/src/www/.env"
  #     content: |
  #       PORT=8080
  #       HOST=0.0.0.0
  #       NODE_ENV=development
  #       HOST_URL=http://{{ ip_response.content }}:8080
  #       COOKIE_ENCRYPT_PWD=superAwesomePasswordStringThatIsAtLeast32CharactersLong!
  #       OKTA_ORG_URL=https://{{ url }}
  #       OKTA_CLIENT_ID={{ id }}
  #       OKTA_CLIENT_SECRET={{ secret }}
  #       PGHOST={{ db_host }}
  #       PGUSERNAME={{ user }}
  #       PGDATABASE=postgres
  #       PGPASSWORD={{ pass }}
  #       PGPORT=5432

  # - name: initialize db
  #   ansible.builtin.shell: node /src/www/tools/initdb.js

  # - name: clear process
  #   ansible.builtin.shell: pm2 delete all
  #   ignore_errors: yes

  # - name: run app
  #   ansible.builtin.shell: pm2 start src/index.js
  #   # async: 45
  #   # poll: 0
  #   args:
  #     chdir: /src/www

  # - name: save process
  #   ansible.builtin.shell: pm2 save

  # - name: set startup process
  #   ansible.builtin.shell: pm2 startup

  # - name: echo
  #   ansible.builtin.shell: echo "1"